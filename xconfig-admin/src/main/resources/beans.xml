<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <context:component-scan base-package="com.xuen.xconfig.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <context:property-placeholder location="classpath:*.properties"/>

    <bean id="zookeeperFactoryBean" class="com.xuen.xconfig.core.ZookeeperFactoryBean">
        <property name="zkConnectionString"
          value="xuzi520.cn:2181,xuzi520.cn:2182,xuzi520.cn:2183"/>
    </bean>

    <!--<bean id="syncRedisClient" class="com.xuen.xconfig.redis.RedisFartory"-->
      <!--factory-method="createSimpleSync">-->
        <!--<constructor-arg name="host" value="xuzi520.cn"/>-->
        <!--<constructor-arg name="port" value="6379"/>-->
        <!--<constructor-arg name="password" value="xuen123456"/>-->
    <!--</bean>-->

    <bean id="aSyncRedisClient" class="com.xuen.xconfig.redis.RedisFartory"
      factory-method="createSimpleAsync">
        <constructor-arg name="host" value="xuzi520.cn"/>
        <constructor-arg name="port" value="6379"/>
        <constructor-arg name="password" value="xuen123456"/>
    </bean>

    <bean id="redisClient" class="com.xuen.xconfig.redis.RedisClient">
        <constructor-arg ref="aSyncRedisClient"/>
    </bean>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
      destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="maxActive" value="10" />
        <property name="minIdle" value="5" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--&lt;!&ndash; 跟mybatis进行整合 &ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:sqlMapConfig.xml"/>-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 5.事务tx -->
    <bean id="txManager"
      class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
              rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
              rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
              rollback-for="java.lang.Exception"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>

        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut expression="execution(* com.xuen.xconfig.admin.service.*.*(..))"
          id="txPointCut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>

    <!-- 配置扫描包，加载mapper代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xuen.xconfig.admin.dao"></property>
    </bean>
</beans>